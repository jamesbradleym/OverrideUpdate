// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Validators;
using Elements.Serialization.JSON;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Hypar.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace OverrideUpdate
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public  class OverrideUpdateInputs : ArgsBase
    
    {
        [Newtonsoft.Json.JsonConstructor]
        
        public OverrideUpdateInputs(double? @optionalNumberEnum, OverrideUpdateInputsOptionalStringEnum? @optionalStringEnum, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey):
        base(modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<OverrideUpdateInputs>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @optionalNumberEnum, @optionalStringEnum});
            }
        
            this.OptionalNumberEnum = @optionalNumberEnum;
            this.OptionalStringEnum = @optionalStringEnum ?? this.OptionalStringEnum;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Optional Number Enum", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OptionalNumberEnum { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Optional String Enum", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public OverrideUpdateInputsOptionalStringEnum? OptionalStringEnum { get; set; }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum OverrideUpdateInputsOptionalStringEnum
    {
        [System.Runtime.Serialization.EnumMember(Value = @"One")]
        One = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Two")]
        Two = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Three")]
        Three = 2,
    
    }
}